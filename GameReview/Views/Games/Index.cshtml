@model GameReview.Models.ViewModel.IndexVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "一覧";

}

<a asp-action="Create">Create New</a>


<div class="d-flex justify-content-between bd-highlight">

    <div class="p-2 bd-highlight">
        <form class="form-inline" asp-action="Index" method="get">
            <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" />
            <input type="submit" value="&#xf002" class="fas btn btn-primary form-control" />

            <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-window-close"></i></a>


        </form>
    </div>
    <div class="p-2 bd-highlight">

        <form method="get" asp-action="Index" class="form-inline" name="sortSelectForm">

            <div class="form-group">
                <label> 並び替え:</label>
                <select asp-for="SortCond"
                        asp-items="Html.GetEnumSelectList<GameReview.Models.ViewModel.IndexVM.SortCondEnum>()"
                        class="form-control" onchange="sortFormSubmit(this.value)">
                </select>
            </div>
        </form>
    </div>


</div>

<div class="table-responsive">
    <table class="table  table-striped table-hover">
        <thead class="thead-light">
            <tr class="">
                <th class="text-nowrap">
                    #
                </th>

                <th class="text-nowrap">
                    @Html.DisplayNameFor(model => model.Game.FirstOrDefault().Title)
                </th>

                <th class="text-nowrap">
                    @Html.DisplayNameFor(model => model.Game.FirstOrDefault().Reviews.FirstOrDefault().Grade)

                </th>
                <th class="text-nowrap">
                    @Html.DisplayNameFor(model => model.Game.FirstOrDefault().Reviews.FirstOrDefault().Summary)
                </th>


                <th class=""></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Game)
            {
                <tr class="">
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.ImagePath)" alt="" class="" />
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Title)

                    </td>
                    <td>
                        @foreach (var i in item.Reviews)
                        {
                            @Html.DisplayFor(modelItem => i.Grade)
                        }
                    </td>
                    <td>
                        @foreach (var i in item.Reviews)
                        {
                            @Html.DisplayFor(modelItem => i.Summary)
                        }
                    </td>
                    <td class="text-nowrap float-right">

                        @if (item.Reviews.FirstOrDefault() == null)
                        {
                            <button class="btn btn-secondary disabled">未評価</button>

                        }
                        else
                        {
                            <a class="btn btn-info" asp-action="Details" asp-route-id="@item.ID">詳細</a>
                        }
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <text>|</text>
                            <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.ID">編集</a> <text>|</text>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ID"><i class="fas fa-trash-alt"></i></a>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

